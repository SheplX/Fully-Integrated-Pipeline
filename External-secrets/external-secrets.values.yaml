USER-SUPPLIED VALUES:
affinity: {}
certController:
  affinity: {}
  create: true
  deploymentAnnotations: {}
  extraArgs: {}
  extraEnv: []
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  image:
    pullPolicy: IfNotPresent
    repository: ghcr.io/external-secrets/external-secrets
    tag: ""
  imagePullSecrets: []
  metrics:
    service:
      annotations: {}
      enabled: false
      port: 8080
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  podLabels: {}
  podSecurityContext: {}
  priorityClassName: ""
  prometheus:
    enabled: false
    service:
      port: 8080
  rbac:
    create: true
  replicaCount: 1
  requeueInterval: 5m
  resources: {}
  securityContext: {}
  serviceAccount:
    annotations: {}
    automount: true
    create: true
    extraLabels: {}
    name: ""
  serviceMonitor:
    additionalLabels: {}
    enabled: false
    interval: 30s
    scrapeTimeout: 25s
  tolerations: []
concurrent: 1
controllerClass: ""
crds:
  createClusterExternalSecret: true
  createClusterSecretStore: true
  createPushSecret: true
createOperator: true
deploymentAnnotations: {}
dnsConfig: {}
extraArgs: {}
extraEnv: []
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: ghcr.io/external-secrets/external-secrets
  tag: ""
imagePullSecrets: []
installCRDs: true
leaderElect: false
metrics:
  service:
    annotations: {}
    enabled: false
    port: 8080
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podDisruptionBudget:
  enabled: false
  minAvailable: 1
podLabels: {}
podSecurityContext: {}
priorityClassName: ""
processClusterExternalSecret: true
processClusterStore: true
prometheus:
  enabled: false
  service:
    port: 8080
rbac:
  create: true
replicaCount: 1
resources: {}
scopedNamespace: ""
scopedRBAC: false
securityContext: {}
serviceAccount:
  annotations: {}
  automount: true
  create: true
  extraLabels: {}
  name: ""
serviceMonitor:
  additionalLabels: {}
  enabled: false
  interval: 30s
  scrapeTimeout: 25s
tolerations: []
webhook:
  affinity: {}
  certCheckInterval: 5m
  certDir: /tmp/certs
  create: true
  deploymentAnnotations: {}
  extraArgs: {}
  extraEnv: []
  extraVolumeMounts: []
  extraVolumes: []
  failurePolicy: Fail
  fullnameOverride: ""
  hostNetwork: false
  image:
    pullPolicy: IfNotPresent
    repository: ghcr.io/external-secrets/external-secrets
    tag: ""
  imagePullSecrets: []
  lookaheadInterval: ""
  metrics:
    service:
      annotations: {}
      enabled: false
      port: 8080
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  podLabels: {}
  podSecurityContext: {}
  port: 10250
  priorityClassName: ""
  prometheus:
    enabled: false
    service:
      port: 8080
  rbac:
    create: true
  readinessProbe:
    address: ""
    port: 8081
  replicaCount: 1
  resources: {}
  secretAnnotations: {}
  securityContext: {}
  serviceAccount:
    annotations: {}
    automount: true
    create: true
    extraLabels: {}
    name: ""
  serviceMonitor:
    additionalLabels: {}
    enabled: false
    interval: 30s
    scrapeTimeout: 25s
  tolerations: []
